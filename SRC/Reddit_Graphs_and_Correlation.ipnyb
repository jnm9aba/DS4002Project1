{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.0"
    },
    "colab": {
      "provenance": [],
      "collapsed_sections": []
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "s-RzEZEBR10z"
      },
      "source": [
        "# Reddit Analysis"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ujitZUYeR101",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9abe0794-ecf5-430c-9c4d-99603e0f2691"
      },
      "source": [
        "# Import Statements\n",
        "import os\n",
        "import numpy as np\n",
        "import matplotlib\n",
        "import matplotlib.pyplot as plt\n",
        "from scipy import stats\n",
        "import pandas as pd\n",
        "\n",
        "# Set Seed\n",
        "np.random.seed(42)\n",
        "\n",
        "reddit = pd.read_csv(\"100yearfulldata.csv\")\n",
        "reddit.info() \n",
        "\n",
        "reddit.isna().sum().sum() # There are no NAs in this dataset"
      ],
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 500 entries, 0 to 499\n",
            "Data columns (total 10 columns):\n",
            " #   Column                   Non-Null Count  Dtype  \n",
            "---  ------                   --------------  -----  \n",
            " 0   Unnamed: 0               500 non-null    int64  \n",
            " 1   Title                    500 non-null    object \n",
            " 2   ID                       500 non-null    object \n",
            " 3   Number of Upvotes        500 non-null    int64  \n",
            " 4   Percent Upvoted          500 non-null    float64\n",
            " 5   Number of Comments       500 non-null    int64  \n",
            " 6   Link                     500 non-null    object \n",
            " 7   Upvote to Comment Ratio  500 non-null    float64\n",
            " 8   Controversy Rating       500 non-null    float64\n",
            " 9   Subreddit                500 non-null    object \n",
            "dtypes: float64(3), int64(3), object(4)\n",
            "memory usage: 39.2+ KB\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "reddit.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 362
        },
        "id": "3C260d83E4xV",
        "outputId": "e7b569a4-4298-42fa-98ac-f19937d8f48f"
      },
      "execution_count": 102,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Unnamed: 0  Number of Upvotes  Percent Upvoted  Number of Comments  \\\n",
              "count  500.000000         500.000000        500.00000          500.000000   \n",
              "mean   250.500000       58181.792000          0.87090         4046.328000   \n",
              "std    144.481833       48080.605299          0.08524         5781.394379   \n",
              "min      1.000000         424.000000          0.55000            9.000000   \n",
              "25%    125.750000        4476.250000          0.82000          303.750000   \n",
              "50%    250.500000       76879.000000          0.89000         3228.000000   \n",
              "75%    375.250000       92347.750000          0.94000         5710.750000   \n",
              "max    500.000000      200149.000000          1.00000        73810.000000   \n",
              "\n",
              "       Upvote to Comment Ratio  Controversy Rating  \n",
              "count               500.000000          500.000000  \n",
              "mean                 17.591900            0.100132  \n",
              "std                  10.708726            0.103166  \n",
              "min                   1.170000            0.017358  \n",
              "25%                   9.635000            0.049688  \n",
              "50%                  15.525000            0.073687  \n",
              "75%                  22.735000            0.121574  \n",
              "max                  64.730000            1.554002  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e96adec9-8258-425b-a613-feffd851490d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Number of Upvotes</th>\n",
              "      <th>Percent Upvoted</th>\n",
              "      <th>Number of Comments</th>\n",
              "      <th>Upvote to Comment Ratio</th>\n",
              "      <th>Controversy Rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>500.000000</td>\n",
              "      <td>500.000000</td>\n",
              "      <td>500.00000</td>\n",
              "      <td>500.000000</td>\n",
              "      <td>500.000000</td>\n",
              "      <td>500.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>250.500000</td>\n",
              "      <td>58181.792000</td>\n",
              "      <td>0.87090</td>\n",
              "      <td>4046.328000</td>\n",
              "      <td>17.591900</td>\n",
              "      <td>0.100132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>144.481833</td>\n",
              "      <td>48080.605299</td>\n",
              "      <td>0.08524</td>\n",
              "      <td>5781.394379</td>\n",
              "      <td>10.708726</td>\n",
              "      <td>0.103166</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>424.000000</td>\n",
              "      <td>0.55000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>1.170000</td>\n",
              "      <td>0.017358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>125.750000</td>\n",
              "      <td>4476.250000</td>\n",
              "      <td>0.82000</td>\n",
              "      <td>303.750000</td>\n",
              "      <td>9.635000</td>\n",
              "      <td>0.049688</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>250.500000</td>\n",
              "      <td>76879.000000</td>\n",
              "      <td>0.89000</td>\n",
              "      <td>3228.000000</td>\n",
              "      <td>15.525000</td>\n",
              "      <td>0.073687</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>375.250000</td>\n",
              "      <td>92347.750000</td>\n",
              "      <td>0.94000</td>\n",
              "      <td>5710.750000</td>\n",
              "      <td>22.735000</td>\n",
              "      <td>0.121574</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>500.000000</td>\n",
              "      <td>200149.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>73810.000000</td>\n",
              "      <td>64.730000</td>\n",
              "      <td>1.554002</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e96adec9-8258-425b-a613-feffd851490d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e96adec9-8258-425b-a613-feffd851490d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e96adec9-8258-425b-a613-feffd851490d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 102
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# add a better measure for popularity that is total number of interactions (upvotes or downvotes)\n",
        "reddit['Interactions'] = reddit['Number of Upvotes']/reddit['Percent Upvoted']"
      ],
      "metadata": {
        "id": "Xzug6W0S_i8h"
      },
      "execution_count": 103,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "reddit.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 362
        },
        "id": "dg0rgfNUAFwB",
        "outputId": "8f085351-b075-4ed1-b323-074364c9caa4"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Unnamed: 0  Number of Upvotes  Percent Upvoted  Number of Comments  \\\n",
              "count  500.000000         500.000000        500.00000          500.000000   \n",
              "mean   250.500000       58181.792000          0.87090         4046.328000   \n",
              "std    144.481833       48080.605299          0.08524         5781.394379   \n",
              "min      1.000000         424.000000          0.55000            9.000000   \n",
              "25%    125.750000        4476.250000          0.82000          303.750000   \n",
              "50%    250.500000       76879.000000          0.89000         3228.000000   \n",
              "75%    375.250000       92347.750000          0.94000         5710.750000   \n",
              "max    500.000000      200149.000000          1.00000        73810.000000   \n",
              "\n",
              "       Upvote to Comment Ratio  Controversy Rating   Interactions  \n",
              "count               500.000000          500.000000     500.000000  \n",
              "mean                 17.591900            0.100132   67012.580970  \n",
              "std                  10.708726            0.103166   55279.670698  \n",
              "min                   1.170000            0.017358     433.000000  \n",
              "25%                   9.635000            0.049688    5865.924658  \n",
              "50%                  15.525000            0.073687   87560.062227  \n",
              "75%                  22.735000            0.121574  105307.021032  \n",
              "max                  64.730000            1.554002  246714.285714  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3c7fb868-499a-4564-a824-d7b27e1fd800\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Number of Upvotes</th>\n",
              "      <th>Percent Upvoted</th>\n",
              "      <th>Number of Comments</th>\n",
              "      <th>Upvote to Comment Ratio</th>\n",
              "      <th>Controversy Rating</th>\n",
              "      <th>Interactions</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>500.000000</td>\n",
              "      <td>500.000000</td>\n",
              "      <td>500.00000</td>\n",
              "      <td>500.000000</td>\n",
              "      <td>500.000000</td>\n",
              "      <td>500.000000</td>\n",
              "      <td>500.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>250.500000</td>\n",
              "      <td>58181.792000</td>\n",
              "      <td>0.87090</td>\n",
              "      <td>4046.328000</td>\n",
              "      <td>17.591900</td>\n",
              "      <td>0.100132</td>\n",
              "      <td>67012.580970</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>144.481833</td>\n",
              "      <td>48080.605299</td>\n",
              "      <td>0.08524</td>\n",
              "      <td>5781.394379</td>\n",
              "      <td>10.708726</td>\n",
              "      <td>0.103166</td>\n",
              "      <td>55279.670698</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>424.000000</td>\n",
              "      <td>0.55000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>1.170000</td>\n",
              "      <td>0.017358</td>\n",
              "      <td>433.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>125.750000</td>\n",
              "      <td>4476.250000</td>\n",
              "      <td>0.82000</td>\n",
              "      <td>303.750000</td>\n",
              "      <td>9.635000</td>\n",
              "      <td>0.049688</td>\n",
              "      <td>5865.924658</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>250.500000</td>\n",
              "      <td>76879.000000</td>\n",
              "      <td>0.89000</td>\n",
              "      <td>3228.000000</td>\n",
              "      <td>15.525000</td>\n",
              "      <td>0.073687</td>\n",
              "      <td>87560.062227</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>375.250000</td>\n",
              "      <td>92347.750000</td>\n",
              "      <td>0.94000</td>\n",
              "      <td>5710.750000</td>\n",
              "      <td>22.735000</td>\n",
              "      <td>0.121574</td>\n",
              "      <td>105307.021032</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>500.000000</td>\n",
              "      <td>200149.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>73810.000000</td>\n",
              "      <td>64.730000</td>\n",
              "      <td>1.554002</td>\n",
              "      <td>246714.285714</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c7fb868-499a-4564-a824-d7b27e1fd800')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3c7fb868-499a-4564-a824-d7b27e1fd800 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3c7fb868-499a-4564-a824-d7b27e1fd800');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KI2IIJdHR104"
      },
      "source": [
        "# import scatter matrix\n",
        "from pandas.plotting import scatter_matrix\n"
      ],
      "execution_count": 105,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Popularity as Number of Upvotes\n",
        "attributes = ['Number of Upvotes', 'Controversy Rating']\n",
        "scatter_matrix(reddit[attributes], figsize=(15, 12))\n",
        "# save_fig(\"scatter_matrix_plot\")"
      ],
      "metadata": {
        "id": "K-wsyv9yjIhU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "d = np.polyfit(reddit['Number of Upvotes'],reddit['Controversy Rating'],1)\n",
        "f = np.poly1d(d)"
      ],
      "metadata": {
        "id": "ulJHSzAd-X4N"
      },
      "execution_count": 109,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "reddit.insert(6,'NReg',f(reddit['Number of Upvotes']))"
      ],
      "metadata": {
        "id": "jo2Q4MGU-vpl"
      },
      "execution_count": 110,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot Controversy Rating vs Number of Upvotes\n",
        "ax=reddit.plot.scatter(x='Number of Upvotes', y='Controversy Rating')\n",
        "reddit.plot(x='Number of Upvotes',y='NReg',color='Red',legend=False,ax=ax)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "Pp8tQo4D--0Y",
        "outputId": "f9c4cbca-e592-4446-8536-221e57b6cf32"
      },
      "execution_count": 111,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f6be8a87fd0>"
            ]
          },
          "metadata": {},
          "execution_count": 111
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Looking at correlation matrix for Number of Upvotes\n",
        "corr_matrix = reddit.corr()\n",
        "corr_matrix.shape\n",
        "corr_matrix['Number of Upvotes'].sort_values(ascending=False)"
      ],
      "metadata": {
        "id": "jkSjbFOQNiyr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Popularity as Total Number of Interactions (Num Upvotes/Percent Upvotes)\n",
        "attributes = ['Interactions', 'Controversy Rating']\n",
        "scatter_matrix(reddit[attributes], figsize=(15, 12))\n",
        "# save_fig(\"scatter_matrix_plot\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 823
        },
        "id": "B1B8KkLmAkBe",
        "outputId": "3064901f-ace8-4698-887b-19f8f6d0310d"
      },
      "execution_count": 112,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f6be8a0f490>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f6be89b5f50>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f6be8978410>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f6be892e910>]],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 112
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x864 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "d = np.polyfit(reddit['Interactions'],reddit['Controversy Rating'],1)\n",
        "f = np.poly1d(d)"
      ],
      "metadata": {
        "id": "6X_5PzWVBA2y"
      },
      "execution_count": 114,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "reddit.insert(6,'IReg',f(reddit['Interactions']))"
      ],
      "metadata": {
        "id": "XrdzVnHNBDJ9"
      },
      "execution_count": 115,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot Controversy Rating vs Interactions\n",
        "ax=reddit.plot.scatter(x='Interactions', y='Controversy Rating')\n",
        "reddit.plot(x='Interactions',y='IReg',color='Red',legend=False,ax=ax)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "xS8YydY3BFnA",
        "outputId": "d6263fc2-2b30-4060-b00e-e8f380ee6f1a"
      },
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f6be90a9210>"
            ]
          },
          "metadata": {},
          "execution_count": 116
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Looking at correlation matrix for Interactions\n",
        "corr_matrix['Interactions'].sort_values(ascending=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Aw3ARiv_Din_",
        "outputId": "60813ccc-ced7-4b8c-f6d1-fd47bc3ab9ae"
      },
      "execution_count": 118,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Interactions               1.000000\n",
              "Number of Upvotes          0.993844\n",
              "Unnamed: 0                 0.729925\n",
              "Number of Comments         0.598909\n",
              "Upvote to Comment Ratio    0.264084\n",
              "Percent Upvoted           -0.038163\n",
              "Controversy Rating        -0.177935\n",
              "Name: Interactions, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Looking at correlation matrix for Controversy Rating\n",
        "corr_matrix['Controversy Rating'].sort_values(ascending=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tFs-4e4nFVga",
        "outputId": "fb784dd8-4696-4d3d-8ad2-8daffe01b271"
      },
      "execution_count": 119,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Controversy Rating         1.000000\n",
              "Number of Comments         0.389374\n",
              "Interactions              -0.177935\n",
              "Number of Upvotes         -0.211251\n",
              "Unnamed: 0                -0.280291\n",
              "Percent Upvoted           -0.365886\n",
              "Upvote to Comment Ratio   -0.544903\n",
              "Name: Controversy Rating, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 119
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Used Geeks for Geeks code to remove IQR outliers after reviewing our graphs: \n",
        "#https://www.geeksforgeeks.org/detect-and-remove-the-outliers-using-python/\n",
        "\n",
        "reddit_new = reddit\n",
        "\n",
        "Q1 = np.percentile(reddit_new['Controversy Rating'], 25,\n",
        "                   interpolation = 'midpoint')\n",
        "Q3 = np.percentile(reddit_new['Controversy Rating'], 75,\n",
        "                   interpolation = 'midpoint')\n",
        "IQR = Q3 - Q1\n",
        " \n",
        "# Upper bound\n",
        "upper = np.where(reddit_new['Controversy Rating'] >= (Q3+1.5*IQR))\n",
        "# Lower bound\n",
        "lower = np.where(reddit_new['Controversy Rating'] <= (Q1-1.5*IQR))\n",
        "\n",
        "reddit_new.drop(upper[0], inplace = True)\n",
        "reddit_new.drop(lower[0], inplace = True)\n"
      ],
      "metadata": {
        "id": "-F1WrKpBI7XO"
      },
      "execution_count": 120,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "d = np.polyfit(reddit_new['Interactions'],reddit_new['Controversy Rating'],1)\n",
        "f = np.poly1d(d)"
      ],
      "metadata": {
        "id": "NqzyRskdIN4E"
      },
      "execution_count": 122,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "reddit_new.insert(6,'FReg',f(reddit_new['Interactions']))"
      ],
      "metadata": {
        "id": "vGWul5hKIN4E"
      },
      "execution_count": 123,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot Controversy Rating vs Interactions after removing outliers\n",
        "ax=reddit.plot.scatter(x='Interactions', y='Controversy Rating')\n",
        "reddit_new.plot(x='Interactions',y='FReg',color='Red',legend=False,ax=ax)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "id": "CmbKgJRGIN4F",
        "outputId": "def09d66-d371-43ed-fcfb-9dd48797426a"
      },
      "execution_count": 124,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f6be9966c50>"
            ]
          },
          "metadata": {},
          "execution_count": 124
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Looking at new correlation matrix for interactions\n",
        "corr_matrix = reddit_new.corr()\n",
        "corr_matrix.shape\n",
        "\n",
        "corr_matrix['Interactions'].sort_values(ascending=False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mnnEhmjeOHZb",
        "outputId": "ddea3cff-124f-4526-dc8d-2c5b763fbff2"
      },
      "execution_count": 125,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Interactions               1.000000\n",
              "Number of Upvotes          0.994056\n",
              "Number of Comments         0.789153\n",
              "Unnamed: 0                 0.734137\n",
              "Upvote to Comment Ratio    0.257045\n",
              "Percent Upvoted           -0.075766\n",
              "Controversy Rating        -0.315129\n",
              "NReg                      -0.994056\n",
              "FReg                      -1.000000\n",
              "IReg                      -1.000000\n",
              "Name: Interactions, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "After creating a better-encompassing variable for post popularity and removing controversy rating outliers, we can see that the correlation coefficient between controversy rating and number of interactions is -.315"
      ],
      "metadata": {
        "id": "xyEGwMJCOKS8"
      }
    }
  ]
}